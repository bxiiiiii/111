typedef struct {
    int *sums;
} NumArray;


NumArray* numArrayCreate(int* nums, int numsSize) {
    NumArray *arr = (NumArray*)malloc(sizeof(NumArray));
    arr->sums =malloc(sizeof(int)* (numsSize+1));
    arr->sums[0] = 0;
    for(int i = 0; i < numsSize; i++)
    {
        arr->sums[i+1] = nums[i] + arr->sums[i]; 
    }
    return arr;
}

int numArraySumRange(NumArray* obj, int i, int j) {
    return obj->sums[j+1] - obj->sums[i];
}

void numArrayFree(NumArray* obj) {
    free(obj->sums);
}

/**
 * Your NumArray struct will be instantiated and called as such:
 * NumArray* obj = numArrayCreate(nums, numsSize);
 * int param_1 = numArraySumRange(obj, i, j);
 
 * numArrayFree(obj);
*/

